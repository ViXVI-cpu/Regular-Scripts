local players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local plr = players.LocalPlayer
local character = plr.Character or plr.CharacterAdded:Wait()
character.Archivable = true
local RunService = game:GetService("RunService")

local espEnabled = false
local espObjects = {}

local ghost
local invisConn
local storedPos

local aimconn

local currentJobId = game.JobId 
local lastServerId = nil 

local infjump = false

local camera = workspace.CurrentCamera

local noclip = false

local UILibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/ViXVI-cpu/Regular-Scripts/refs/heads/main/Ui%20Library"))()

local TPS = game:GetService("TeleportService")
local Api = "https://games.roblox.com/v1/games/"

local _place = game.PlaceId
local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=100"

local function ListServers(cursor)
	local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
	return HttpService:JSONDecode(Raw)
end

local function createESPGui(targetPlayer)
	if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("Head") then return end

	local head = targetPlayer.Character.Head

	local billboard = Instance.new("BillboardGui")
	billboard.Name = "PlayerESP"
	billboard.Size = UDim2.new(0, 200, 0, 50)
	billboard.StudsOffset = Vector3.new(0, 2, 0)
	billboard.AlwaysOnTop = true
	billboard.Adornee = head
	billboard.Parent = head

	local textLabel = Instance.new("TextLabel")
	textLabel.Size = UDim2.new(1, 0, 1, 0)
	textLabel.BackgroundTransparency = 1
	textLabel.TextColor3 = Color3.new(1, 1, 1)
	textLabel.TextStrokeTransparency = 0.5
	textLabel.TextScaled = true
	textLabel.Font = Enum.Font.SourceSansBold
	textLabel.Name = "ESPText"
	textLabel.Parent = billboard

	local highlight = Instance.new("Highlight")
	highlight.Name = "PlayerESPHighlight"
	highlight.Adornee = targetPlayer.Character
	highlight.FillTransparency = 1
	highlight.OutlineColor = Color3.new(1, 1, 1)
	highlight.OutlineTransparency = 0
	highlight.Parent = targetPlayer.Character

	espObjects[targetPlayer] = {
		gui = billboard,
		label = textLabel,
		highlight = highlight
	}
end

local function removeESP(player)
	local esp = espObjects[player]
	if esp then
		if esp.gui then esp.gui:Destroy() end
		if esp.highlight then esp.highlight:Destroy() end
		espObjects[player] = nil
	end
end

local function toggleESP(state)
	espEnabled = state

	if espEnabled then
		for _, player in ipairs(players:GetPlayers()) do
			if player ~= plr then
				createESPGui(player)
			end
		end
	else
		for _, player in ipairs(players:GetPlayers()) do
			removeESP(player)
		end
	end
end

local function invis(State)
	if State then
		local realChar = plr.Character
		local hrp = realChar:WaitForChild("HumanoidRootPart")

		storedPos = hrp.CFrame
	
		invisConn = RunService.RenderStepped:Connect(function()
			hrp.CFrame = storedPos * CFrame.new(700, 700, 700)
		end)

		ghost = realChar:Clone()
		ghost.Name = realChar.Name.."_Clone"
		ghost.Parent = workspace

		for _, part in ipairs(ghost:GetDescendants()) do
			if part:IsA("BasePart") then
				part.Anchored = false
				part.CanCollide = true
				part.Transparency = 0.8
			end
		end

		ghost:WaitForChild("HumanoidRootPart").CFrame = storedPos

		camera.CameraSubject = ghost:WaitForChild("Humanoid")
		plr.Character = ghost
	else
		if ghost then
			local realChar = plr.Character.Parent:FindFirstChild(plr.Name) or character
			
			invisConn:Disconnect()
			invisConn = nil
			
			if realChar then
				realChar:PivotTo(ghost.HumanoidRootPart.CFrame)
			end

			ghost:Destroy()
			ghost = nil
		end

		plr.Character = character
		camera.CameraSubject = character:WaitForChild("Humanoid")
	end
end

local function flygui()
	local main = Instance.new("ScreenGui")
	local Frame = Instance.new("Frame")
	local up = Instance.new("TextButton")
	local down = Instance.new("TextButton")
	local onof = Instance.new("TextButton")
	local TextLabel = Instance.new("TextLabel")
	local plus = Instance.new("TextButton")
	local speed = Instance.new("TextLabel")
	local mine = Instance.new("TextButton")

	--Properties:

	main.Name = "main"
	main.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Frame.Parent = main
	Frame.BackgroundColor3 = Color3.fromRGB(163, 255, 137)
	Frame.BorderColor3 = Color3.fromRGB(103, 221, 213)
	Frame.Position = UDim2.new(0.100320168, 0, 0.379746825, 0)
	Frame.Size = UDim2.new(0, 190, 0, 57)

	up.Name = "up"
	up.Parent = Frame
	up.BackgroundColor3 = Color3.fromRGB(79, 255, 152)
	up.Size = UDim2.new(0, 44, 0, 28)
	up.Font = Enum.Font.SourceSans
	up.Text = "UP"
	up.TextColor3 = Color3.fromRGB(0, 0, 0)
	up.TextSize = 14.000

	down.Name = "down"
	down.Parent = Frame
	down.BackgroundColor3 = Color3.fromRGB(215, 255, 121)
	down.Position = UDim2.new(0, 0, 0.491228074, 0)
	down.Size = UDim2.new(0, 44, 0, 28)
	down.Font = Enum.Font.SourceSans
	down.Text = "DOWN"
	down.TextColor3 = Color3.fromRGB(0, 0, 0)
	down.TextSize = 14.000

	onof.Name = "onof"
	onof.Parent = Frame
	onof.BackgroundColor3 = Color3.fromRGB(255, 249, 74)
	onof.Position = UDim2.new(0.702823281, 0, 0.491228074, 0)
	onof.Size = UDim2.new(0, 56, 0, 28)
	onof.Font = Enum.Font.SourceSans
	onof.Text = "fly"
	onof.TextColor3 = Color3.fromRGB(0, 0, 0)
	onof.TextSize = 14.000

	TextLabel.Parent = Frame
	TextLabel.BackgroundColor3 = Color3.fromRGB(242, 60, 255)
	TextLabel.Position = UDim2.new(0.469327301, 0, 0, 0)
	TextLabel.Size = UDim2.new(0, 100, 0, 28)
	TextLabel.Font = Enum.Font.SourceSans
	TextLabel.Text = "Fly Gui v1"
	TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14.000
	TextLabel.TextWrapped = true

	plus.Name = "plus"
	plus.Parent = Frame
	plus.BackgroundColor3 = Color3.fromRGB(133, 145, 255)
	plus.Position = UDim2.new(0.231578946, 0, 0, 0)
	plus.Size = UDim2.new(0, 45, 0, 28)
	plus.Font = Enum.Font.SourceSans
	plus.Text = "+"
	plus.TextColor3 = Color3.fromRGB(0, 0, 0)
	plus.TextScaled = true
	plus.TextSize = 14.000
	plus.TextWrapped = true

	speed.Name = "speed"
	speed.Parent = Frame
	speed.BackgroundColor3 = Color3.fromRGB(255, 85, 0)
	speed.Position = UDim2.new(0.468421042, 0, 0.491228074, 0)
	speed.Size = UDim2.new(0, 44, 0, 28)
	speed.Font = Enum.Font.SourceSans
	speed.Text = "1"
	speed.TextColor3 = Color3.fromRGB(0, 0, 0)
	speed.TextScaled = true
	speed.TextSize = 14.000
	speed.TextWrapped = true

	mine.Name = "mine"
	mine.Parent = Frame
	mine.BackgroundColor3 = Color3.fromRGB(123, 255, 247)
	mine.Position = UDim2.new(0.231578946, 0, 0.491228074, 0)
	mine.Size = UDim2.new(0, 45, 0, 29)
	mine.Font = Enum.Font.SourceSans
	mine.Text = "-"
	mine.TextColor3 = Color3.fromRGB(0, 0, 0)
	mine.TextScaled = true
	mine.TextSize = 14.000
	mine.TextWrapped = true

	speeds = 1

	local speaker = game:GetService("Players").LocalPlayer

	local chr = game.Players.LocalPlayer.Character
	local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")

	nowe = false

	Frame.Active = true -- main = gui
	Frame.Draggable = true

	onof.MouseButton1Down:connect(function()

		if nowe == true then
			nowe = false

			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
			speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
		else 
			nowe = true



			for i = 1, speeds do
				spawn(function()

					local hb = game:GetService("RunService").Heartbeat	


					tpwalking = true
					local chr = game.Players.LocalPlayer.Character
					local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
					while tpwalking and hb:Wait() and chr and hum and hum.Parent do
						if hum.MoveDirection.Magnitude > 0 then
							chr:TranslateBy(hum.MoveDirection)
						end
					end

				end)
			end
			game.Players.LocalPlayer.Character.Animate.Disabled = true
			local Char = game.Players.LocalPlayer.Character
			local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

			for i,v in next, Hum:GetPlayingAnimationTracks() do
				v:AdjustSpeed(0)
			end
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
			speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
		end




		if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R6 then



			local plr = game.Players.LocalPlayer
			local torso = plr.Character.Torso
			local flying = true
			local deb = true
			local ctrl = {f = 0, b = 0, l = 0, r = 0}
			local lastctrl = {f = 0, b = 0, l = 0, r = 0}
			local maxspeed = 50
			local speed = 0


			local bg = Instance.new("BodyGyro", torso)
			bg.P = 9e4
			bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			bg.cframe = torso.CFrame
			local bv = Instance.new("BodyVelocity", torso)
			bv.velocity = Vector3.new(0,0.1,0)
			bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
			if nowe == true then
				plr.Character.Humanoid.PlatformStand = true
			end
			while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
				game:GetService("RunService").RenderStepped:Wait()

				if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
					speed = speed+.5+(speed/maxspeed)
					if speed > maxspeed then
						speed = maxspeed
					end
				elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
					speed = speed-1
					if speed < 0 then
						speed = 0
					end
				end
				if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
					lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
				elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				else
					bv.velocity = Vector3.new(0,0,0)
				end
				--	game.Players.LocalPlayer.Character.Animate.Disabled = true
				bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
			end
			ctrl = {f = 0, b = 0, l = 0, r = 0}
			lastctrl = {f = 0, b = 0, l = 0, r = 0}
			speed = 0
			bg:Destroy()
			bv:Destroy()
			plr.Character.Humanoid.PlatformStand = false
			game.Players.LocalPlayer.Character.Animate.Disabled = false
			tpwalking = false




		else
			local plr = game.Players.LocalPlayer
			local UpperTorso = plr.Character.UpperTorso
			local flying = true
			local deb = true
			local ctrl = {f = 0, b = 0, l = 0, r = 0}
			local lastctrl = {f = 0, b = 0, l = 0, r = 0}
			local maxspeed = 50
			local speed = 0


			local bg = Instance.new("BodyGyro", UpperTorso)
			bg.P = 9e4
			bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			bg.cframe = UpperTorso.CFrame
			local bv = Instance.new("BodyVelocity", UpperTorso)
			bv.velocity = Vector3.new(0,0.1,0)
			bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
			if nowe == true then
				plr.Character.Humanoid.PlatformStand = true
			end
			while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
				wait()

				if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
					speed = speed+.5+(speed/maxspeed)
					if speed > maxspeed then
						speed = maxspeed
					end
				elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
					speed = speed-1
					if speed < 0 then
						speed = 0
					end
				end
				if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
					lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
				elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				else
					bv.velocity = Vector3.new(0,0,0)
				end

				bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
			end
			ctrl = {f = 0, b = 0, l = 0, r = 0}
			lastctrl = {f = 0, b = 0, l = 0, r = 0}
			speed = 0
			bg:Destroy()
			bv:Destroy()
			plr.Character.Humanoid.PlatformStand = false
			game.Players.LocalPlayer.Character.Animate.Disabled = false
			tpwalking = false



		end





	end)


	up.MouseButton1Down:connect(function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,2,0)

	end)


	down.MouseButton1Down:connect(function()

		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-2,0)

	end)


	game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)
		wait(0.7)
		game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
		game.Players.LocalPlayer.Character.Animate.Disabled = false

	end)


	plus.MouseButton1Down:connect(function()
		speeds = speeds + 1
		speed.Text = speeds
		if nowe == true then


			tpwalking = false
			for i = 1, speeds do
				spawn(function()

					local hb = game:GetService("RunService").Heartbeat	


					tpwalking = true
					local chr = game.Players.LocalPlayer.Character
					local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
					while tpwalking and hb:Wait() and chr and hum and hum.Parent do
						if hum.MoveDirection.Magnitude > 0 then
							chr:TranslateBy(hum.MoveDirection)
						end
					end

				end)
			end
		end
	end)
	mine.MouseButton1Down:connect(function()
		if speeds == 1 then
			speed.Text = 'can not be less than 1'
			wait(1)
			speed.Text = speeds
		else
			speeds = speeds - 1
			speed.Text = speeds
			if nowe == true then
				tpwalking = false
				for i = 1, speeds do
					spawn(function()

						local hb = game:GetService("RunService").Heartbeat	


						tpwalking = true
						local chr = game.Players.LocalPlayer.Character
						local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
						while tpwalking and hb:Wait() and chr and hum and hum.Parent do
							if hum.MoveDirection.Magnitude > 0 then
								chr:TranslateBy(hum.MoveDirection)
							end
						end

					end)
				end
			end
		end
	end)
end

local function getNearestPlayer(originPosition)
	local closestPlayer = nil
	local shortestDistance = math.huge

	for _, player in ipairs(players:GetPlayers()) do
		if player ~= plr then
			local character = player.Character
			if character and character:FindFirstChild("HumanoidRootPart") then
				local distance = (character.HumanoidRootPart.Position - originPosition).Magnitude
				if distance < shortestDistance then
					shortestDistance = distance
					closestPlayer = player
				end
			end
		end
	end

	return closestPlayer
end

local function faceTarget(target)
	if target and character and character.HumanoidRootPart then
		local charHRP = character.HumanoidRootPart
		local dir = (target.HumanoidRootPart.Position - charHRP.Position).Unit
		dir = Vector3.new(dir.X, 0, dir.Z)
		charHRP.CFrame = CFrame.new(charHRP.Position, charHRP.Position + dir)
	end
end

local function rejoinGame(delay)
	task.delay(delay, function()
		TPS:TeleportToPlaceInstance(_place, game.Jobld, plr)
	end)
end

-- Function to get a list of public servers
local function getPublicServers()
	local servers = {}
	local cursor = ""

	repeat
		local url = ("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100%s"):format(_place, cursor ~= "" and "&cursor="..cursor or "")
		local success, response = pcall(function()
			return HttpService:GetAsync(url)
		end)

		if success then
			local data = HttpService:JSONDecode(response)
			if data and data.data then
				for _, server in ipairs(data.data) do
					if server.id ~= currentJobId and server.id ~= lastServerId and server.playing < server.maxPlayers then
						table.insert(servers, server)
					end
				end
			end
			cursor = data.nextPageCursor or ""
		else
			warn("Failed to get server list")
			break
		end
	until cursor == "" or #servers >= 50 -- cap list size

	return servers
end

-- Function to hop to a different public server
local function serverHop()
	local servers = getPublicServers()
	if #servers > 0 then
		local target = servers[math.random(1, #servers)]
		lastServerId = target.id
		TPS:TeleportToPlaceInstance(_place, target.id, plr)
		return true
	else
		warn("No available public servers found!")
		return false
	end
end

function init()
	local ui = UILibrary.new({
		TitleText = "Universal Hub", -- change title text
		Size = UDim2.new(0, 175, 0, 225), -- change Size
		Position = UDim2.new(0.5, -140, 0.5, -190), -- change position when UI starts
		TitleHeight = 30,
		CornerRadius = 6,
		ElementPadding = 6,
		Font = Enum.Font.GothamSemibold,
		TextSize = 12,
		SectionHeight = 20,
		UIStrokeThickness = 1,
		SliderColor = Color3.fromRGB(54, 54, 54),
		NotifcationSound = "rbxassetid://80833448337193",
		ResetOnSpawn = false
	})
	
	ui:AddSection("Main")
	
	ui:AddButton({
		Text = "Fly",
		
		Callback = function()
			flygui()
			ui:Notify({
				Title = "Fly gui",
				Text = "Credits to meozoneYT for this fly thing",
				Duration = 2,
				StartPosition = UDim2.new(1, 0, 0.776, 0),
				EndPosition = UDim2.new(0.724, 0, 0.776, 0),
				TweenTime = 0.5
			})
		end,
	})
	
	ui:AddToggle({
		Text = "ESP",
		Default = false,
		Callback = function(state)
			toggleESP(state)
		end
	})

	ui:AddToggle({
		Text = "Noclip (BETA)",
		Default = false,
		Callback = function(state)
			noclip = state
		end
	})

	ui:AddTextBox({
		Text = "Go to:",
		Default = "nil",
		Placeholder = "Go to:",
		
		Callback = function(text)
			local target = players:FindFirstChild(text)

			if target then
				character:PivotTo(target.Character.HumanoidRootPart.CFrame)
			else
				ui:Notify({
					Title = "Error",
					Text = "Player not found",
					Duration = 3,
					StartPosition = UDim2.new(1, 0, 0.776, 0),
					EndPosition = UDim2.new(0.724, 0, 0.776, 0),
					TweenTime = 0.5
				})
			end
		end
	})

	ui:AddToggle({
		Text = "Xray",
		Default = false,
		Callback = function(state)
			for _, obj in pairs(workspace:GetDescendants()) do
				if obj:IsA("BasePart") then
					local char = obj:FindFirstAncestorOfClass("Model")
					local isCharacter = char and char:FindFirstChildOfClass("Humanoid")

					if isCharacter then
						obj.Transparency = 0
					else
						obj.Transparency = state and 0.8 or 0
					end
				end
			end
		end
	})
	
	ui:AddToggle({
		Text = "Infinite Jump",
		Default = false,
		
		Callback = function(state)
			infjump = state
		end,
	})
	
	ui:AddToggle({
		Text = "Invisibility",
		Default = false,

		Callback = function(state)
			invis(state)
		end,
	})
	
	ui:AddToggle({
		Text = "Aimbot",
		Default = false,
		
		Callback = function(state)
			if state then
				local hrp = character:FindFirstChild("HumanoidRootPart")
				local target = getNearestPlayer(hrp.Position)
				
				
				if target then
					aimconn = RunService.RenderStepped:Connect(function()
						local targetchar = target.Character
						local targetPos = targetchar.HumanoidRootPart.Position
						local camPos = hrp.Position
						camera.CFrame = CFrame.new(camPos, targetPos)
						faceTarget(targetchar)
					end)
				else
					ui:Notify({
						Title = "Error",
						Text = "Player not found!",
						Duration = 3,
						StartPosition = UDim2.new(1, 0, 0.776, 0),
						EndPosition = UDim2.new(0.724, 0, 0.776, 0),
						TweenTime = 0.5
					})
				end
			else
				if aimconn then
					aimconn:Disconnect()
					aimconn = nil
				end
			end
		end,
	})
	

	ui:AddSeparator()
	ui:AddSection("Troll")

	ui:AddToggle({
		Text = "Fling Spin (BETA)",
		
		Default = false,
		
		Callback = function(state)
			task.spawn(function()
				local hrp = character:FindFirstChild("HumanoidRootPart")
				if hrp then
					while state do
						hrp.RotVelocity = Vector3.new(0, 999, 0)
						task.wait()
					end
				else
					ui:Notify({
						Title = "Error",
						Text = "HumanoidRootPart not found!",
						Duration = 3,
						StartPosition = UDim2.new(1, 0, 0.776, 0),
						EndPosition = UDim2.new(0.724, 0, 0.776, 0),
						TweenTime = 0.5
					})
				end
			end)
		end,
	})

	ui:AddSeparator()

	ui:AddSection("Admin")
	
	ui:AddButton({
		Text = "Infinite Yield",
		
		Callback = function()
			loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
		end,
	})
	
	ui:AddButton({
		Text = "Nameless Admin",
		
		Callback = function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source"))()
		end,
	})
	
	ui:AddButton({
		Text = "Fedora Admin",
		
		Callback = function()
			loadstring(game:HttpGet('https://raw.githubusercontent.com/alexx1212/fedoratoomutch/main/toomucth'))()
		end,
	})
	
	ui:AddButton({
		Text = "Cmd X",
		
		Callback = function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source", true))()
		end,
	})
	
	ui:AddButton({
		Text = "Proton Admin (DESTROYED)",
		
		Callback = function()
			ui:Notify({
				Title = "Shit Admin",
				Text = "Dont use this garbage",
				Duration = 2,
				StartPosition = UDim2.new(1, 0, 0.776, 0),
				EndPosition = UDim2.new(0.724, 0, 0.776, 0),
				TweenTime = 0.5
			})
		end,
	})
	
	ui:AddSeparator()
	
	ui:AddSection("Server")
	
	ui:AddButton({
		Text = "Rejoin",
		
		Callback = function()
			rejoinGame(2)
			
			ui:Notify({
				Title = "Rejoining...",
				Text = "Initiating rejoin...",
				Duration = 3,
				StartPosition = UDim2.new(1, 0, 0.776, 0),
				EndPosition = UDim2.new(0.724, 0, 0.776, 0),
				TweenTime = 0.5
			})
		end,
	})
	
	ui:AddButton({
		Text = "ServerHop",
		
		Callback = function()
			local foundserver = serverHop()
			
			if foundserver then
				ui:Notify({
					Title = "Sever found!",
					Text = "Joining server...",
					Duration = 3,
					StartPosition = UDim2.new(1, 0, 0.776, 0),
					EndPosition = UDim2.new(0.724, 0, 0.776, 0),
					TweenTime = 0.5
				})
			else
				ui:Notify({
					Title = "No servers found...",
					Text = "Unable to find a server.",
					Duration = 3,
					StartPosition = UDim2.new(1, 0, 0.776, 0),
					EndPosition = UDim2.new(0.724, 0, 0.776, 0),
					TweenTime = 0.5
				})
			end
		end,
	})
	
	ui:AddButton({
		Text = "Join Smallest Server",
		
		Callback = function()
			local Server, Next; repeat
				local Servers = ListServers(Next)
				Server = Servers.data[1]
				Next = Servers.nextPageCursor
			until Server

			TPS:TeleportToPlaceInstance(_place,Server.id, plr)
		end,
	})
	
	ui:AddSeparator()

	ui:AddSection("Player")

	ui:AddSlider({
		Text = "Walkspeed",
		Default = 16,
		Min = 0,
		Max = 200,

		Callback = function(num)
			character.Humanoid.WalkSpeed = num
		end,
	})

	ui:AddSlider({
		Text = "JumpPower",
		Default = 50,
		Min = 0,
		Max = 200,

		Callback = function(num)
			character.Humanoid.JumpPower = num
		end,
	})

	ui:AddSeparator()

	ui:AddSection("Ui Controls")

	ui:AddButton({
		Text = "Destroy Ui",
		Callback = function()
			ui:Destroy()
		end
	})
	
	ui:AddButton({
		Text = "Restart Ui",
		Callback = function()
			ui:Destroy()
			task.wait(.5)
			init()
		end
	})

	ui:AddSeparator()

	ui:AddSection("Credits")

	ui:AddLabel("Made By SugaBlaz")
	ui:AddLabel("Thanks to: Hmmm5650 for this cool ui library!")

	ui:AddSeparator()

	ui:Notify({
		Title = "Loaded",
		Text = "Thanks for using this...       Hi its me suga elelelelele",
		Duration = 3,
		StartPosition = UDim2.new(1, 0, 0.776, 0),
		EndPosition = UDim2.new(0.724, 0, 0.776, 0),
		TweenTime = 0.5
	})
end

init()

players.PlayerAdded:Connect(function(player)
	if espEnabled and player ~= plr then
		player.CharacterAdded:Connect(function()
			wait(1)
			createESPGui(player)
		end)
	end
end)

RunService.Stepped:Connect(function()
	if noclip and character then
		local hrpY = character:WaitForChild("HumanoidRootPart").Position.Y

		for _, v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") then
				if v.Position.Y < hrpY - 2 then
					v.CanCollide = true
				else
					v.CanCollide = false
				end
			end
		end
	else
		for _, v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") then
				v.CanCollide = true
			end
		end
	end
end)

RunService.RenderStepped:Connect(function()
	if not espEnabled then return end

	for player, esp in pairs(espObjects) do
		if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local distance = math.floor((player.Character.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude)
			local displayName = player.DisplayName
			esp.label.Text = displayName .. " [" .. distance .. " studs]"
		end
	end
end)

game:GetService("UserInputService").JumpRequest:Connect(function()
	if infjump then
		character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
	end
end)
